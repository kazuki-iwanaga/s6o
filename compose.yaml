services:
  webapp:
    container_name: webapp
    build:
      context: ./webapp
      dockerfile: Dockerfile
    ports:
      - $WEBAPP_PORT:$WEBAPP_PORT
    volumes:
      - ./webapp:/app
    working_dir: /app
    command: npx remix vite:dev --host 0.0.0.0 --port $WEBAPP_PORT
  db:
    container_name: db
    image: postgres:$POSTGRES_VERSION
    restart: always
    shm_size: 128mb
    environment:
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: $POSTGRES_DB
      PGPORT: $POSTGRES_PORT
  hasura:
    # https://hasura.io/docs/2.0/getting-started/docker-simple/
    image: hasura/graphql-engine:v$HASURA_VERSION
    ports:
      - $HASURA_PORT:$HASURA_PORT
    restart: always
    environment:
      HASURA_GRAPHQL_SERVER_PORT: $HASURA_PORT
      ## postgres database to store Hasura metadata
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@db:$POSTGRES_PORT/$POSTGRES_DB
      ## this env var can be used to add the above postgres database to Hasura as a data source. this can be removed/updated based on your needs
      PG_DATABASE_URL: postgres://$POSTGRES_USER:$POSTGRES_PASSWORD@db:$POSTGRES_PORT/$POSTGRES_DB
      ## enable the console served by server
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      ## uncomment next line to run console offline (i.e load console assets from server instead of CDN)
      # HASURA_GRAPHQL_CONSOLE_ASSETS_DIR: /srv/console-assets
      ## uncomment next line to set an admin secret
      # HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey
    depends_on:
      - db